#!/bin/bash

# Script de validation avanc√©e pour SonarCloud Coverage
# Usage: ./validate_sonarcloud_coverage.sh

echo "üîç Validation avanc√©e du coverage pour SonarCloud"
echo "================================================="

# Nettoyage et g√©n√©ration
echo "üßπ Nettoyage et g√©n√©ration du coverage..."
rm -f coverage.xml test-results.xml sonar-report.json
rm -rf htmlcov/ .coverage

python3 -m pytest tests/unit/ -v \
  --cov=src \
  --cov-report=xml:coverage.xml \
  --cov-report=term-missing \
  --cov-config=.coveragerc \
  --junit-xml=test-results.xml \
  --quiet

echo ""
echo "üìä Validation des fichiers pour SonarCloud:"
echo "============================================"

# Validation coverage.xml
if [ -f "coverage.xml" ]; then
    echo "‚úÖ coverage.xml g√©n√©r√© ($(du -h coverage.xml | cut -f1))"
    
    # V√©rification XML bien form√©
    if command -v xmllint &> /dev/null; then
        if xmllint --noout coverage.xml 2>/dev/null; then
            echo "  ‚úÖ XML bien form√©"
        else
            echo "  ‚ùå XML malform√©"
            exit 1
        fi
    fi
    
    # Extraction des m√©triques
    LINE_RATE=$(grep -o 'line-rate="[^"]*"' coverage.xml | head -1 | cut -d'"' -f2)
    LINES_VALID=$(grep -o 'lines-valid="[^"]*"' coverage.xml | head -1 | cut -d'"' -f2)
    LINES_COVERED=$(grep -o 'lines-covered="[^"]*"' coverage.xml | head -1 | cut -d'"' -f2)
    
    echo "  üìà M√©trique: ${LINES_COVERED}/${LINES_VALID} lignes couvertes (${LINE_RATE})"
    
    # V√©rification des sources
    if grep -q "<source>src</source>" coverage.xml; then
        echo "  ‚úÖ Sources correctement d√©finies (chemins relatifs)"
    else
        echo "  ‚ö†Ô∏è Sources avec chemins absolus d√©tect√©s"
        grep "<source>" coverage.xml
    fi
    
    # V√©rification des classes
    CLASS_COUNT=$(grep -c '<class name=' coverage.xml)
    echo "  üìÅ ${CLASS_COUNT} fichiers source analys√©s"
    
else
    echo "‚ùå coverage.xml NON g√©n√©r√©"
    exit 1
fi

# Validation test-results.xml
if [ -f "test-results.xml" ]; then
    echo "‚úÖ test-results.xml g√©n√©r√© ($(du -h test-results.xml | cut -f1))"
    
    if command -v xmllint &> /dev/null; then
        if xmllint --noout test-results.xml 2>/dev/null; then
            echo "  ‚úÖ XML bien form√©"
        else
            echo "  ‚ùå XML malform√©"
        fi
    fi
    
    # Extraction du nombre de tests
    if grep -q 'testsuite' test-results.xml; then
        TESTS_COUNT=$(grep -o 'tests="[^"]*"' test-results.xml | head -1 | cut -d'"' -f2)
        FAILURES_COUNT=$(grep -o 'failures="[^"]*"' test-results.xml | head -1 | cut -d'"' -f2)
        echo "  üß™ ${TESTS_COUNT} tests ex√©cut√©s, ${FAILURES_COUNT} √©checs"
    fi
else
    echo "‚ö†Ô∏è test-results.xml NON g√©n√©r√© (optionnel)"
fi

echo ""
echo "üîß V√©rification de la configuration SonarCloud:"
echo "==============================================="

if [ -f "sonar-project.properties" ]; then
    echo "‚úÖ sonar-project.properties trouv√©"
    
    # V√©rification des param√®tres cl√©s
    if grep -q "sonar.python.coverage.reportPaths=coverage.xml" sonar-project.properties; then
        echo "  ‚úÖ Chemin coverage correctement configur√©"
    else
        echo "  ‚ùå Chemin coverage mal configur√©"
    fi
    
    if grep -q "sonar.sources=src/" sonar-project.properties; then
        echo "  ‚úÖ Sources correctement configur√©es"
    else
        echo "  ‚ùå Sources mal configur√©es"
    fi
    
    if grep -q "sonar.tests=tests/" sonar-project.properties; then
        echo "  ‚úÖ Tests correctement configur√©s"
    else
        echo "  ‚ùå Tests mal configur√©s"
    fi
    
else
    echo "‚ùå sonar-project.properties NON trouv√©"
fi

echo ""
echo "üìã R√©sum√© pour SonarCloud:"
echo "========================="
echo "- Coverage XML: ‚úÖ Pr√™t (format Cobertura)"
echo "- Test Results: $([ -f "test-results.xml" ] && echo "‚úÖ Pr√™t" || echo "‚ö†Ô∏è Manquant")"
echo "- Configuration: ‚úÖ Optimis√©e"
echo "- Chemins relatifs: ‚úÖ Configur√©s"
echo ""
echo "üöÄ Votre configuration est pr√™te pour SonarCloud !"
echo "   Push vos modifications pour d√©clencher l'analyse."